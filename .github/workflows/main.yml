name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: stefantagarski/event-backend
  FRONTEND_IMAGE: stefantagarski/event-frontend
  IMAGE_TAG: 1.0

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images with tag 1.0
        run: |
          # Build and push backend
          docker build -t ${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }} ./backend
          docker push ${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}

          # Build and push frontend  
          docker build -t ${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }} ./frontend
          docker push ${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd ~/event-app

            # Create environment file
            cat > .env << EOF
            MONGO_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }}
            MONGO_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }}
            MONGO_DATABASE=eventdb
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            EOF

            # Pull and deploy with 1.0-tagged images
            docker compose pull --ignore-pull-failures
            docker compose down --remove-orphans
            docker compose up -d --force-recreate

            # Cleanup
            docker image prune -f
