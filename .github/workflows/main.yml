name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: docker.io
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          # Add your test commands here
          # docker-compose -f docker-compose.test.yml run --rm test
          echo "Running tests..."

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image-tag: ${{ env.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up environment variables
        run: |
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      - name: Build backend Docker image
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/event-backend:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/event-backend:latest ${{ secrets.DOCKER_USERNAME }}/event-backend:${{ github.sha }}

      - name: Build frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/event-frontend:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/event-frontend:latest ${{ secrets.DOCKER_USERNAME }}/event-frontend:${{ github.sha }}

      - name: Push Docker images
        run: |
          # Push backend images
          docker push ${{ secrets.DOCKER_USERNAME }}/event-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/event-backend:${{ github.sha }}
          
          # Push frontend images
          docker push ${{ secrets.DOCKER_USERNAME }}/event-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/event-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT || 22 }}
          timeout: 300s
