# Docker Compose file for Event Management System (Debug Version)

services:
  mongodb:
    image: mongo:latest
    container_name: event_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - event_network

  backend:
    image: stefantagarski/event-backend:1.0
    container_name: event_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@event_mongodb:27017/${MONGO_DATABASE}?authSource=admin
      DATABASE_NAME: ${MONGO_DATABASE}
      SECRET_KEY: ${SECRET_KEY}
      FLASK_ENV: production
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - event_network

  frontend:
    image: stefantagarski/event-frontend:1.0
    container_name: event_frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      API_BASE_URL: http://event_backend:5000/api
      BACKEND_URL: http://event_backend:5000
    depends_on:
      - backend
    networks:
      - event_network

volumes:
  mongodb_data:

networks:
  event_network:
    driver: bridge